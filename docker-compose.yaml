version: "3.9"

# x-kong-config: &kong-env
#   KONG_DATABASE: ${KONG_DATABASE:-off}
#   KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
#   KONG_PG_HOST: kong-db
#   KONG_PG_USER: ${KONG_PG_USER:-kong}
#   KONG_PG_PASSWORD: ${KONG_PG_USER:-kong}

services:
  postgres:
    image: postgres
    container_name: base-a-pg
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: teste
    volumes:
      - ./databases/postgres/data/:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - bridge-network
  mongo-base-b:
    image: mongo
    container_name: base-b-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: teste
    volumes:
      - ./databases/mongodb/data:/data/db
    ports:
      - 27017:27017
    networks:
      - bridge-network
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: teste
      ME_CONFIG_MONGODB_URL: mongodb://root:teste@mongo:27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    depends_on:
      - mongo
    networks:
      - bridge-network
  busca-dados:
    build: ./apps/busca-dados-consumidores/
    container_name: bdc
    hostname: busca-dados
    working_dir: /var/www/
    volumes:
      - ./apps/busca-dados-consumidores/:/var/www
    depends_on:
      - postgres
      # - nginx
    networks:
      - bridge-network
  # nginx:
  #   image: nginx:alpine
  #   container_name: php-nginx
  #   ports:
  #     - 8000:80
  #   volumes:
  #     - ./apps/busca-dados-consumidores/:/var/www
  #     - ./nginx/conf.d/:/etc/nginx/conf.d/
  #   networks:
  #     - bridge-network
  score-service:
    build:
      context: ./apps/score-service/vendor/laravel/sail/runtimes/8.0
      dockerfile: Dockerfile
      args:
        WWWGROUP: "1234"
    image: sail-8.0/app
    container_name: score-service
    ports:
      - "${APP_PORT:-8088}:80"
    environment:
      WWWUSER: "sail"
      LARAVEL_SAIL: 1
    volumes:
      - "./apps/score-service/:/var/www/html"
    networks:
      - bridge-network
    # depends_on:
    #   - mysql
    #   # - pgsql
    #   - redis
    #   # - selenium
  eventos-service:
    build:
      context: ./apps/eventos-cpf-service/docker/8.0
      dockerfile: Dockerfile
      args:
        WWWGROUP: "1234"
    image: sail-8.0/app
    container_name: eventos-service
    ports:
      - "${APP_PORT:-8090}:80"
    environment:
      WWWUSER: "sail"
      LARAVEL_SAIL: 1
      DB_HOST: "mongo"
      DB_PORT: "27017"
    volumes:
      - "./apps/eventos-cpf-service/:/var/www/html"
    networks:
      - bridge-network
    depends_on:
      - redis
      - mongo
  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "./databases/redis/data/:/data"
    networks:
      - bridge-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s
  kong:
    image: kong:latest
    user: "kong"
    container_name: kong
    # command: kong migrations bootstrap
    env_file:
      - ./kong/.env
    environment:
      # <<: *kong-env
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: kong-db
      KONG_PG_PORT: 5432
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:8001}"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
    volumes:
      - ./kong-prefix/:${KONG_PREFIX:-/var/run/kong}
      - ./kong/config:/opt/kong
    security_opt:
      - no-new-privileges
    depends_on:
      - kong-db
    ports:
      - "443:8443"
      - "8001:8001"
      - "8000:8000"
    networks:
      - bridge-network
  kong-db:
    env_file:
      - ./kong/.env
    image: postgres:9.5
    container_name: kong-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - ./kong/postgres/data/:/var/lib/postgresql/data
    ports:
      - 54322:5432
    networks:
      - bridge-network
networks:
  bridge-network:
    driver: "bridge"
    name: bridge-network
